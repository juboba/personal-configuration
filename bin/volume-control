#!/usr/bin/env bash
AMIXER_SET_CMD="amixer sset Master"
AMIXER_GET_CMD="amixer get Master"
AMIXER_INC=5%

run_command() {
    echo "running..." $1 > /tmp/debug_log
    read -r a b <<<$($1 | grep -e "^  Front Right" -e "^  Mono" | tail -1 | sed 's/.*\[\([0-9]*\)%\] \[\(on\|off\)\].*/\1 \2/')
    echo "$a $b"
}

vol_up() {
    run_command "$AMIXER_SET_CMD $AMIXER_INC+"
    [ "notify" = "$1" ] && notify-send -h string:x-canonical-private-synchronous:volume "$(format_volume "$(vol_getCurrent)")"
}

vol_down() {
    run_command "$AMIXER_SET_CMD $AMIXER_INC-"
    [ "notify" = "$1" ] && notify-send -h string:x-canonical-private-synchronous:volume "$(format_volume "$(vol_getCurrent)")"
}

vol_toggle() {
    run_command "$AMIXER_SET_CMD toggle"
}

vol_getCurrent() {
    run_command "$AMIXER_GET_CMD"
}

format_volume() {
    result=$1
    vol=$(echo "$result" | cut -d' ' -f1)
    is_on=$(echo "$result" | cut -d' ' -f2)

    if [ $is_on = "off" ]
    then
        icon=
    elif [ $vol -gt 30 ]
    then
        icon=
    else
        icon=
    fi

    echo $icon $vol%
}

if [ "$1" = "up" ]
then
  format_volume "$(vol_up "$2")"
elif [ "$1" = "down" ]
then
  format_volume "$(vol_down "$2")"
elif [ "$1" = "mute" ]
then
  format_volume "$(vol_toggle)"
else
  format_volume "$(vol_getCurrent)"
fi

# read -r a b <<<$(amixer -D pulse get Master | grep "^  Front Right" | cut -d' ' -f7,8 | sed -e 's/\[//g' -e 's/\]//g'); echo "$a $b"
